(async () => {
    let serviceWorkerUrl = "https://alert.rojgarresult.app/quickpanel_push.js";
    let websitePixelKey = "RaPxPWgbwHnqz5Wa";
    let websiteHost = "rojgarresult.app";
    let publicKey = "BO4cT-dRCkp_qjfoSGDbEP0q8rS0zoo4rsPZhNA1XgIlY-DjHb0DKxAIl_nr07R14OE_rn2DrIChkbmKtxnArbI";

    // Ensure the website is accessed on the correct domain
    if (window.location.hostname !== websiteHost && window.location.hostname !== `www.${websiteHost}`) {
        console.log("Push Notification: Incorrect domain.");
        return;
    }

    // Check if service workers and Push API are supported
    if (!('serviceWorker' in navigator)) {
        console.log("Push Notification: Service Workers not supported.");
        return;
    }
    if (!('PushManager' in window)) {
        console.log("Push Notification: Push API not supported.");
        return;
    }

    // Register the service worker
    try {
        let swRegistration = await navigator.serviceWorker.register(serviceWorkerUrl, { scope: "/" });
        console.log("Service Worker registered:", swRegistration);

        // Request notification permission and subscribe
        let permission = await Notification.requestPermission();
        if (permission !== "granted") {
            console.log("Push Notification: Permission denied.");
            return;
        }

        let subscription = await swRegistration.pushManager.subscribe({
            userVisibleOnly: true,
            applicationServerKey: publicKey,
        });

        console.log("Push Notification: Subscribed successfully:", subscription);

        // Send subscription details to your server
        await fetch(`https://alert.rojgarresult.app/pixel-track/${websitePixelKey}`, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                endpoint: subscription.endpoint,
                keys: subscription.toJSON().keys,
                type: "create",
                pixelKey: websitePixelKey,
            }),
        });
    } catch (error) {
        console.error("Push Notification: Error during setup:", error);
    }
})();
